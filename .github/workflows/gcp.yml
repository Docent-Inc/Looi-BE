name: docent

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -t docent .
          docker tag docent taewan2002/docent:${GITHUB_SHA::7}
          docker push taewan2002/docent:${GITHUB_SHA::7}
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DMZ_GCP }}
          username: ${{ secrets.DMZ_GCP_USER }}
          key: ${{ secrets.DMZ_GCP_KEY }}
          envs: GITHUB_SHA
          script: |
            # Set the service name and port
            SERVICE="blue"
            PORT="8001"

            # Pull the new image
            sudo docker pull taewan2002/docent:${GITHUB_SHA::7}

            # Stop the existing service if it's running
            if sudo docker ps -a --filter "name=^/${SERVICE}$" --format '{{.Names}}' | grep -qw "${SERVICE}"; then
              sudo docker stop ${SERVICE}
            fi

            # Run the new service
            sudo docker run -d --rm --name ${SERVICE} -p ${PORT}:8000 taewan2002/docent:${GITHUB_SHA::7}

            # Update the NGINX configuration
            sudo sed -i "s/server localhost:800[1-3];/server localhost:${PORT};/g" /etc/nginx/nginx.conf

            # Update the service-url.inc file
            echo "set \$service_url http://127.0.0.1:${PORT};" | sudo tee /etc/nginx/conf.d/service-url.inc

            # Reload the NGINX service
            sudo systemctl reload nginx

            # Cleanup old images
            echo "ðŸ§¹ Cleaning up old Docker images"
            sudo docker rmi -f $(sudo docker images -q) || true